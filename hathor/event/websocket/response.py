# Copyright 2023 Hathor Labs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from typing import Any, Dict, List

from pydantic import Field, NonNegativeInt

from hathor.event import BaseEvent
from hathor.utils.pydantic import BaseModel


class EventResponse(BaseModel):
    """Class that represents an event to be sent to the client.

    Args:
        type: The type of the response.
        event: The event.
        latest_event_id: The ID of the latest event known by the server.
    """

    type: str = Field(default='EVENT', const=True)
    event: BaseEvent
    latest_event_id: NonNegativeInt


class BadRequestResponse(BaseModel):
    """Class to let the client know that it performed a bad request.

    Args:
        type: The type of the response.
        errors: A list of error details, as generated by ValidationError.errors().
    """

    type: str = Field(default='BAD_REQUEST', const=True)
    errors: List[Dict[str, Any]]


class EventWebSocketNotRunningResponse(BaseModel):
    """Class to let the client know that WebSocket server is not running.

    Args:
        type: The type of the response.
    """

    type: str = Field(default='EVENT_WS_NOT_RUNNING', const=True)
